// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Library renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Library
    addDemoPalettes={[MockFunction]}
    closeNewUserDialog={[MockFunction]}
    currentUser={true}
    deleteCardFromLibrary={[MockFunction]}
    history={Object {}}
    isNewUser={false}
    library={Array []}
    loading={false}
    uid={null}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <withRouter(Connect(Header))
          animateHeader={false}
        />,
        Array [],
        false,
        null,
        <div
          className="empty-library"
        >
          <h3>
            Empty Palette Collection!
          </h3>
        </div>,
        false,
      ],
      "className": "library",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "animateHeader": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      false,
      null,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <h3>
            Empty Palette Collection!
          </h3>,
          "className": "empty-library",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Empty Palette Collection!",
          },
          "ref": null,
          "rendered": "Empty Palette Collection!",
          "type": "h3",
        },
        "type": "div",
      },
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <withRouter(Connect(Header))
            animateHeader={false}
          />,
          Array [],
          false,
          null,
          <div
            className="empty-library"
          >
            <h3>
              Empty Palette Collection!
            </h3>
          </div>,
          false,
        ],
        "className": "library",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "animateHeader": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        false,
        null,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h3>
              Empty Palette Collection!
            </h3>,
            "className": "empty-library",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Empty Palette Collection!",
            },
            "ref": null,
            "rendered": "Empty Palette Collection!",
            "type": "h3",
          },
          "type": "div",
        },
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
