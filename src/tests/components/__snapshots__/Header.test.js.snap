// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header
    animateHeader={false}
    closeNewUserDialog={[MockFunction]}
    currentUser={true}
    history={
      Object {
        "push": [MockFunction],
      }
    }
    isNewUser={false}
    library={Array []}
    userName=""
    userPhoto={null}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="header-top"
          style={
            Object {
              "backgroundColor": "",
            }
          }
        >
          <div
            className="profile"
          >
            <div
              className="profile-image"
            />
            <button
              onClick={[Function]}
            >
              
            </button>
            <button
              onClick={[Function]}
            >
              <Icon
                icon="down"
              />
            </button>
            <ClickOutside
              elementIsOpen={false}
              onRequestClose={[Function]}
            >
              <div
                className="profile-dialog"
              >
                <div
                  className="palette-count"
                >
                  <span
                    className="count"
                  >
                    0
                  </span>
                  PALETTES
                </div>
                <button
                  className="sign-out"
                  onClick={[Function]}
                >
                  SIGN OUT
                </button>
              </div>
            </ClickOutside>
          </div>
          <button
            className="add"
            onClick={[Function]}
          >
            ADD PALETTE
          </button>
        </div>,
        <CSSTransitionGroup
          transitionAppear={false}
          transitionEnter={true}
          transitionEnterTimeout={300}
          transitionLeave={true}
          transitionLeaveTimeout={300}
          transitionName="header-logo"
        >
          <div
            className="header-logo"
          >
            <h2>
              Colorly
            </h2>
            <span>
              <Icon
                icon="logo"
              />
            </span>
          </div>
        </CSSTransitionGroup>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="profile"
            >
              <div
                className="profile-image"
              />
              <button
                onClick={[Function]}
              >
                
              </button>
              <button
                onClick={[Function]}
              >
                <Icon
                  icon="down"
                />
              </button>
              <ClickOutside
                elementIsOpen={false}
                onRequestClose={[Function]}
              >
                <div
                  className="profile-dialog"
                >
                  <div
                    className="palette-count"
                  >
                    <span
                      className="count"
                    >
                      0
                    </span>
                    PALETTES
                  </div>
                  <button
                    className="sign-out"
                    onClick={[Function]}
                  >
                    SIGN OUT
                  </button>
                </div>
              </ClickOutside>
            </div>,
            <button
              className="add"
              onClick={[Function]}
            >
              ADD PALETTE
            </button>,
          ],
          "className": "header-top",
          "style": Object {
            "backgroundColor": "",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="profile-image"
                />,
                <button
                  onClick={[Function]}
                >
                  
                </button>,
                <button
                  onClick={[Function]}
                >
                  <Icon
                    icon="down"
                  />
                </button>,
                <ClickOutside
                  elementIsOpen={false}
                  onRequestClose={[Function]}
                >
                  <div
                    className="profile-dialog"
                  >
                    <div
                      className="palette-count"
                    >
                      <span
                        className="count"
                      >
                        0
                      </span>
                      PALETTES
                    </div>
                    <button
                      className="sign-out"
                      onClick={[Function]}
                    >
                      SIGN OUT
                    </button>
                  </div>
                </ClickOutside>,
              ],
              "className": "profile",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": null,
                  "className": "profile-image",
                },
                "ref": null,
                "rendered": null,
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "",
                "type": "button",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Icon
                    icon="down"
                  />,
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "icon": "down",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "button",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <div
                    className="profile-dialog"
                  >
                    <div
                      className="palette-count"
                    >
                      <span
                        className="count"
                      >
                        0
                      </span>
                      PALETTES
                    </div>
                    <button
                      className="sign-out"
                      onClick={[Function]}
                    >
                      SIGN OUT
                    </button>
                  </div>,
                  "elementIsOpen": false,
                  "onRequestClose": [Function],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <div
                        className="palette-count"
                      >
                        <span
                          className="count"
                        >
                          0
                        </span>
                        PALETTES
                      </div>,
                      <button
                        className="sign-out"
                        onClick={[Function]}
                      >
                        SIGN OUT
                      </button>,
                    ],
                    "className": "profile-dialog",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <span
                            className="count"
                          >
                            0
                          </span>,
                          "PALETTES",
                        ],
                        "className": "palette-count",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": 0,
                            "className": "count",
                          },
                          "ref": null,
                          "rendered": 0,
                          "type": "span",
                        },
                        "PALETTES",
                      ],
                      "type": "div",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "SIGN OUT",
                        "className": "sign-out",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": "SIGN OUT",
                      "type": "button",
                    },
                  ],
                  "type": "div",
                },
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "ADD PALETTE",
              "className": "add",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "ADD PALETTE",
            "type": "button",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <div
            className="header-logo"
          >
            <h2>
              Colorly
            </h2>
            <span>
              <Icon
                icon="logo"
              />
            </span>
          </div>,
          "transitionAppear": false,
          "transitionEnter": true,
          "transitionEnterTimeout": 300,
          "transitionLeave": true,
          "transitionLeaveTimeout": 300,
          "transitionName": "header-logo",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h2>
                Colorly
              </h2>,
              <span>
                <Icon
                  icon="logo"
                />
              </span>,
            ],
            "className": "header-logo",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Colorly",
              },
              "ref": null,
              "rendered": "Colorly",
              "type": "h2",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Icon
                  icon="logo"
                />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "icon": "logo",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "span",
            },
          ],
          "type": "div",
        },
        "type": [Function],
      },
    ],
    "type": "header",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="header-top"
            style={
              Object {
                "backgroundColor": "",
              }
            }
          >
            <div
              className="profile"
            >
              <div
                className="profile-image"
              />
              <button
                onClick={[Function]}
              >
                
              </button>
              <button
                onClick={[Function]}
              >
                <Icon
                  icon="down"
                />
              </button>
              <ClickOutside
                elementIsOpen={false}
                onRequestClose={[Function]}
              >
                <div
                  className="profile-dialog"
                >
                  <div
                    className="palette-count"
                  >
                    <span
                      className="count"
                    >
                      0
                    </span>
                    PALETTES
                  </div>
                  <button
                    className="sign-out"
                    onClick={[Function]}
                  >
                    SIGN OUT
                  </button>
                </div>
              </ClickOutside>
            </div>
            <button
              className="add"
              onClick={[Function]}
            >
              ADD PALETTE
            </button>
          </div>,
          <CSSTransitionGroup
            transitionAppear={false}
            transitionEnter={true}
            transitionEnterTimeout={300}
            transitionLeave={true}
            transitionLeaveTimeout={300}
            transitionName="header-logo"
          >
            <div
              className="header-logo"
            >
              <h2>
                Colorly
              </h2>
              <span>
                <Icon
                  icon="logo"
                />
              </span>
            </div>
          </CSSTransitionGroup>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="profile"
              >
                <div
                  className="profile-image"
                />
                <button
                  onClick={[Function]}
                >
                  
                </button>
                <button
                  onClick={[Function]}
                >
                  <Icon
                    icon="down"
                  />
                </button>
                <ClickOutside
                  elementIsOpen={false}
                  onRequestClose={[Function]}
                >
                  <div
                    className="profile-dialog"
                  >
                    <div
                      className="palette-count"
                    >
                      <span
                        className="count"
                      >
                        0
                      </span>
                      PALETTES
                    </div>
                    <button
                      className="sign-out"
                      onClick={[Function]}
                    >
                      SIGN OUT
                    </button>
                  </div>
                </ClickOutside>
              </div>,
              <button
                className="add"
                onClick={[Function]}
              >
                ADD PALETTE
              </button>,
            ],
            "className": "header-top",
            "style": Object {
              "backgroundColor": "",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="profile-image"
                  />,
                  <button
                    onClick={[Function]}
                  >
                    
                  </button>,
                  <button
                    onClick={[Function]}
                  >
                    <Icon
                      icon="down"
                    />
                  </button>,
                  <ClickOutside
                    elementIsOpen={false}
                    onRequestClose={[Function]}
                  >
                    <div
                      className="profile-dialog"
                    >
                      <div
                        className="palette-count"
                      >
                        <span
                          className="count"
                        >
                          0
                        </span>
                        PALETTES
                      </div>
                      <button
                        className="sign-out"
                        onClick={[Function]}
                      >
                        SIGN OUT
                      </button>
                    </div>
                  </ClickOutside>,
                ],
                "className": "profile",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": null,
                    "className": "profile-image",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "",
                  "type": "button",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Icon
                      icon="down"
                    />,
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "icon": "down",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "button",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <div
                      className="profile-dialog"
                    >
                      <div
                        className="palette-count"
                      >
                        <span
                          className="count"
                        >
                          0
                        </span>
                        PALETTES
                      </div>
                      <button
                        className="sign-out"
                        onClick={[Function]}
                      >
                        SIGN OUT
                      </button>
                    </div>,
                    "elementIsOpen": false,
                    "onRequestClose": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <div
                          className="palette-count"
                        >
                          <span
                            className="count"
                          >
                            0
                          </span>
                          PALETTES
                        </div>,
                        <button
                          className="sign-out"
                          onClick={[Function]}
                        >
                          SIGN OUT
                        </button>,
                      ],
                      "className": "profile-dialog",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <span
                              className="count"
                            >
                              0
                            </span>,
                            "PALETTES",
                          ],
                          "className": "palette-count",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": 0,
                              "className": "count",
                            },
                            "ref": null,
                            "rendered": 0,
                            "type": "span",
                          },
                          "PALETTES",
                        ],
                        "type": "div",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "SIGN OUT",
                          "className": "sign-out",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": "SIGN OUT",
                        "type": "button",
                      },
                    ],
                    "type": "div",
                  },
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "ADD PALETTE",
                "className": "add",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "ADD PALETTE",
              "type": "button",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <div
              className="header-logo"
            >
              <h2>
                Colorly
              </h2>
              <span>
                <Icon
                  icon="logo"
                />
              </span>
            </div>,
            "transitionAppear": false,
            "transitionEnter": true,
            "transitionEnterTimeout": 300,
            "transitionLeave": true,
            "transitionLeaveTimeout": 300,
            "transitionName": "header-logo",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h2>
                  Colorly
                </h2>,
                <span>
                  <Icon
                    icon="logo"
                  />
                </span>,
              ],
              "className": "header-logo",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Colorly",
                },
                "ref": null,
                "rendered": "Colorly",
                "type": "h2",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Icon
                    icon="logo"
                  />,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "icon": "logo",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "span",
              },
            ],
            "type": "div",
          },
          "type": [Function],
        },
      ],
      "type": "header",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
